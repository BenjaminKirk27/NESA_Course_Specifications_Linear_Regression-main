import numpy as np
import matplotlib.pyplot as plt
plt.style.use('ggplot')
from sklearn.linear_model import LinearRegression


x = np.array([[2], [4], [6], [8], [10], [12], [14], [16]])
y = np.array([1, 3, 5, 7, 9, 11, 13, 15])
plt.scatter(x, y, marker='x', c='r')
plt.title("NESA Course Specifications Data")
plt.ylabel('Example targets')
plt.xlabel('Example features')
plt.show()
m = len(x)
print(f"Number of training examples is: {m}")
my_model = LinearRegression()
my_model.fit(x, y)
y_pred = my_model.predict(x)
plt.plot(x, y_pred)
plt.scatter(x, y, marker='x', c='r')
plt.title("NESA Course Specifications Data")
plt.ylabel('Example targets')
plt.xlabel('Example features')
plt.show()
test = np.array([4.5])
predict = np.array([4.5]).reshape(1, -1)
y_prediction = my_model.predict(predict)
y_pred = my_model.predict(x)
plt.plot(x, y_pred)
plt.scatter(x, y, marker='x', c='r')
plt.scatter(predict, y_prediction, marker='D', c='r', zorder=10, s=100)
plt.text(y_prediction, predict, f"Target {y_prediction[0]} is prediction from {predict[0,0]} input")
plt.title("NESA Course Specifications Data")
plt.ylabel('Example targets')
plt.xlabel('Example features')
plt.show()
print(f"predicted feature is: {y_prediction}")